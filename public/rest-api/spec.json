{
  "swaggerVersion":"1.2",
  "apis":[
    {
      "operations":[
        {
          "parameters":[

          ],
          "responseClass":"List[BlueprintState]",
          "notes":"Returns a list a submitted blueprints.",
          "summary":"List uploaded blueprints",
          "nickname":"list",
          "method":"get"
        }
      ],
      "path":"/blueprints",
      "description":null
    },
    {
      "operations":[
        {
          "parameters":[
            {
              "dataType":"string",
              "paramType":"path",
              "name":"blueprint_id"
            }
          ],
          "responseClass":"BlueprintState",
          "notes":"deletes a blueprint by its id.",
          "summary":"Delete blueprint by id",
          "nickname":"deleteById",
          "method":"delete"
        },
        {
          "parameters":[
            {
              "dataType":"string",
              "paramType":"path",
              "name":"blueprint_id"
            }
          ],
          "responseClass":"BlueprintState",
          "notes":"Returns a blueprint by its id.",
          "summary":"Get blueprint by id",
          "nickname":"getById",
          "method":"get"
        },
        {
          "parameters":[
            {
              "dataType":"string",
              "paramType":"path",
              "name":"blueprint_id"
            },
            {
              "defaultValue":"blueprint.yaml",
              "name":"application_file_name",
              "dataType":"string",
              "allowMultiple":false,
              "required":false,
              "paramType":"query",
              "description":"File name of yaml containing the \"main\" blueprint."
            },
            {
              "name":"body",
              "dataType":"binary",
              "allowMultiple":false,
              "required":true,
              "paramType":"body",
              "description":"Binary form of the tar gzipped blueprint directory"
            }
          ],
          "responseClass":"BlueprintState",
          "notes":"Submitted blueprint should be a tar gzipped directory containing the blueprint.",
          "consumes":[
            "application/octet-stream"
          ],
          "summary":"Upload a blueprint (id specified)",
          "nickname":"upload",
          "method":"put"
        }
      ],
      "path":"/blueprints/{blueprint_id}",
      "description":null
    },
    {
      "operations":[
        {
          "notes":"Downloads blueprint as an archive.",
          "nickname":"getArchive",
          "method":"get",
          "parameters":[
            {
              "dataType":"string",
              "paramType":"path",
              "name":"blueprint_id"
            }
          ],
          "summary":"Download blueprint's archive"
        }
      ],
      "path":"/blueprints/{blueprint_id}/archive",
      "description":null
    },
    {
      "operations":[
        {
          "parameters":[

          ],
          "responseClass":"List[Execution]",
          "notes":"Returns a list of executions for the optionally provided deployment id.",
          "summary":"List executions",
          "nickname":"list",
          "method":"get"
        },
        {
          "nickname":"nickname",
          "method":"post",
          "parameters":[

          ],
          "summary":"Execute a workflow"
        }
      ],
      "path":"/executions",
      "description":null
    },
    {
      "operations":[
        {
          "parameters":[
            {
              "dataType":"string",
              "paramType":"path",
              "name":"execution_id"
            }
          ],
          "responseClass":"Execution",
          "notes":"Returns the execution state by its id.",
          "summary":"Get execution by id",
          "nickname":"getById",
          "method":"get"
        },
        {
          "parameters":[
            {
              "dataType":"string",
              "paramType":"path",
              "name":"execution_id"
            },
            {
              "name":"status",
              "dataType":"string",
              "allowMultiple":false,
              "required":true,
              "paramType":"body",
              "description":"The execution's new status"
            },
            {
              "name":"error",
              "dataType":"string",
              "allowMultiple":false,
              "required":false,
              "paramType":"body",
              "description":"An error message. If omitted, error will be updated to an empty string"
            }
          ],
          "responseClass":"Execution",
          "notes":"Updates the execution's status",
          "consumes":[
            "application/json"
          ],
          "summary":"Update execution status by id",
          "nickname":"updateExecutionStatus",
          "method":"patch"
        },
        {
          "parameters":[
            {
              "dataType":"string",
              "paramType":"path",
              "name":"execution_id"
            },
            {
              "name":"body",
              "dataType":"ModifyExecutionRequest",
              "allowMultiple":false,
              "required":true,
              "paramType":"body",
              "description":"json with an action key. Legal values for action are: [cancel, force-cancel]"
            }
          ],
          "responseClass":"Execution",
          "notes":"Modifies a running execution state (currently, only cancel and force-cancel are supported)",
          "consumes":[
            "application/json"
          ],
          "summary":"Apply execution action (cancel, force-cancel) by id",
          "nickname":"modify_state",
          "method":"post"
        }
      ],
      "path":"/executions/{execution_id}",
      "description":null
    },
    {
      "operations":[
        {
          "parameters":[

          ],
          "responseClass":"List[Deployment]",
          "notes":"Returns a list existing deployments.",
          "summary":"List deployments",
          "nickname":"list",
          "method":"get"
        }
      ],
      "path":"/deployments",
      "description":null
    },
    {
      "operations":[
        {
          "parameters":[
            {
              "dataType":"string",
              "paramType":"path",
              "name":"deployment_id"
            },
            {
              "paramType":"query",
              "name":"ignore_live_nodes",
              "dataType":"boolean",
              "allowMultiple":false,
              "required":false,
              "defaultValue":false,
              "description":"Specifies whether to ignore live nodes,or raise an error upon such nodes instead."
            }
          ],
          "responseClass":"Deployment",
          "notes":"deletes a deployment by its id.",
          "summary":"Delete deployment by id",
          "nickname":"deleteById",
          "method":"delete"
        },
        {
          "parameters":[
            {
              "dataType":"string",
              "paramType":"path",
              "name":"deployment_id"
            }
          ],
          "responseClass":"Deployment",
          "notes":"Returns a deployment by its id.",
          "summary":"Get deployment by id",
          "nickname":"getById",
          "method":"get"
        },
        {
          "parameters":[
            {
              "dataType":"string",
              "paramType":"path",
              "name":"deployment_id"
            },
            {
              "name":"body",
              "dataType":"DeploymentRequest",
              "allowMultiple":false,
              "required":true,
              "paramType":"body",
              "description":"Deployment blue print"
            }
          ],
          "responseClass":"Deployment",
          "notes":"Created a new deployment of the given blueprint.",
          "consumes":[
            "application/json"
          ],
          "summary":"Create a deployment",
          "nickname":"createDeployment",
          "method":"put"
        }
      ],
      "path":"/deployments/{deployment_id}",
      "description":null
    },
    {
      "operations":[
        {
          "parameters":[
            {
              "dataType":"string",
              "paramType":"path",
              "name":"deployment_id"
            }
          ],
          "responseClass":"DeploymentOutputs",
          "notes":"Gets a specific deployment outputs.",
          "summary":"Get deployment outputs",
          "nickname":"get",
          "method":"get"
        }
      ],
      "path":"/deployments/{deployment_id}/outputs",
      "description":null
    },
    {
      "operations":[
        {
          "parameters":[
            {
              "dataType":"string",
              "paramType":"path",
              "name":"deployment_id"
            },
            {
              "name":"body",
              "dataType":"DeploymentModificationRequest",
              "allowMultiple":false,
              "required":true,
              "paramType":"body",
              "description":"Deployment modification specification"
            }
          ],
          "responseClass":"DeploymentModification",
          "notes":"Modify deployment.",
          "consumes":[
            "application/json"
          ],
          "summary":null,
          "nickname":"modifyDeployment",
          "method":"patch"
        }
      ],
      "path":"/deployments/{deployment_id}/modify",
      "description":null
    },
    {
      "operations":[
        {
          "parameters":[
            {
              "name":"deployment_id",
              "dataType":"string",
              "allowMultiple":false,
              "required":false,
              "paramType":"query",
              "description":"Deployment id"
            }
          ],
          "responseClass":"List[Node]",
          "notes":"Returns nodes list according to the provided query parameters.",
          "summary":"List nodes",
          "nickname":"listNodes",
          "method":"get"
        }
      ],
      "path":"/nodes",
      "description":null
    },
    {
      "operations":[
        {
          "parameters":[
            {
              "name":"deployment_id",
              "dataType":"string",
              "allowMultiple":false,
              "required":false,
              "paramType":"query",
              "description":"Deployment id"
            },
            {
              "name":"node_name",
              "dataType":"string",
              "allowMultiple":false,
              "required":false,
              "paramType":"query",
              "description":"node name"
            }
          ],
          "responseClass":"List[NodeInstance]",
          "notes":"Returns node instances list according to the provided query parameters.",
          "summary":"List node instances",
          "nickname":"listNodeInstances",
          "method":"get"
        }
      ],
      "path":"/node-instances",
      "description":null
    },
    {
      "operations":[
        {
          "parameters":[
            {
              "dataType":"string",
              "paramType":"path",
              "name":"node_instance_id"
            },
            {
              "name":"node_id",
              "dataType":"string",
              "allowMultiple":false,
              "required":true,
              "paramType":"path",
              "description":"Node Id"
            },
            {
              "paramType":"query",
              "name":"state_and_runtime_properties",
              "dataType":"boolean",
              "allowMultiple":false,
              "required":false,
              "defaultValue":true,
              "description":"Specifies whether to return state and runtime properties"
            }
          ],
          "responseClass":"Node",
          "notes":"Returns node state/runtime properties according to the provided query parameters.",
          "summary":"Get node instance by id",
          "nickname":"getNodeInstance",
          "method":"get"
        },
        {
          "parameters":[
            {
              "name":"node_instance_id",
              "dataType":"string",
              "allowMultiple":false,
              "required":true,
              "paramType":"path",
              "description":"Node instance identifier"
            },
            {
              "name":"version",
              "dataType":"int",
              "allowMultiple":false,
              "required":true,
              "paramType":"body",
              "description":"used for optimistic locking during update"
            },
            {
              "name":"runtime_properties",
              "dataType":"dict",
              "allowMultiple":false,
              "required":false,
              "paramType":"body",
              "description":"a dictionary of runtime properties. If omitted, the runtime properties wont be updated"
            },
            {
              "name":"state",
              "dataType":"string",
              "allowMultiple":false,
              "required":false,
              "paramType":"body",
              "description":"the new node's state. If omitted, the state wont be updated"
            }
          ],
          "responseClass":"NodeInstance",
          "notes":"Update node instance. Expecting the request body to be a dictionary containing 'version' which is used for optimistic locking during the update, and optionally 'runtime_properties' (dictionary) and/or 'state' (string) properties",
          "consumes":[
            "application/json"
          ],
          "summary":"Update node instance by id",
          "nickname":"patchNodeState",
          "method":"patch"
        }
      ],
      "path":"/node-instances/{node_instance_id}",
      "description":null
    },
    {
      "operations":[
        {
          "parameters":[
            {
              "name":"body",
              "dataType":"string",
              "allowMultiple":false,
              "required":true,
              "paramType":"body",
              "description":"ElasticSearch query."
            }
          ],
          "notes":"Returns a list of events for the provided ElasticSearch query. The response format is as ElasticSearch response format.",
          "method":"get",
          "summary":"List events for the provided Elasticsearch query",
          "nickname":"events",
          "consumes":[
            "application/json"
          ]
        },
        {
          "parameters":[
            {
              "name":"body",
              "dataType":"string",
              "allowMultiple":false,
              "required":true,
              "paramType":"body",
              "description":"ElasticSearch query."
            }
          ],
          "notes":"Returns a list of events for the provided ElasticSearch query. The response format is as ElasticSearch response format.",
          "method":"post",
          "summary":"List events for the provided Elasticsearch query",
          "nickname":"events",
          "consumes":[
            "application/json"
          ]
        }
      ],
      "path":"/events",
      "description":null
    },
    {
      "operations":[
        {
          "parameters":[
            {
              "name":"body",
              "dataType":"string",
              "allowMultiple":false,
              "required":true,
              "paramType":"body",
              "description":"ElasticSearch query."
            }
          ],
          "notes":"Returns results from the storage for the provided ElasticSearch query. The response format is as ElasticSearch response format.",
          "method":"post",
          "summary":"Search using an Elasticsearch query",
          "nickname":"search",
          "consumes":[
            "application/json"
          ]
        }
      ],
      "path":"/search",
      "description":null
    },
    {
      "operations":[
        {
          "parameters":[

          ],
          "responseClass":"Status",
          "notes":"Returns state of running system services",
          "summary":"Get the status of running system services",
          "nickname":"status",
          "method":"get"
        }
      ],
      "path":"/status",
      "description":null
    },
    {
      "operations":[
        {
          "parameters":[

          ],
          "responseClass":"ProviderContext",
          "notes":"Get the provider context",
          "summary":"Get provider context",
          "nickname":"getContext",
          "method":"get"
        },
        {
          "parameters":[
            {
              "name":"body",
              "dataType":"PostProviderContextRequest",
              "allowMultiple":false,
              "required":true,
              "paramType":"body",
              "description":"Provider context"
            }
          ],
          "responseClass":"ProviderContextPostStatus",
          "notes":"Post the provider context",
          "consumes":[
            "application/json"
          ],
          "summary":"Create provider context",
          "nickname":"postContext",
          "method":"post"
        }
      ],
      "path":"/provider/context",
      "description":null
    },
    {
      "operations":[
        {
          "parameters":[

          ],
          "responseClass":"Version",
          "notes":"Returns version information for this rest service",
          "summary":"Get version information",
          "nickname":"version",
          "method":"get"
        }
      ],
      "path":"/version",
      "description":null
    },
    {
      "operations":[
        {
          "parameters":[
            {
              "name":"body",
              "dataType":"EvaluateFunctionsRequest",
              "allowMultiple":false,
              "required":true,
              "paramType":"body",
              "description":""
            }
          ],
          "responseClass":"EvaluatedFunctions",
          "notes":"Evaluate provided payload for intrinsic functions",
          "consumes":[
            "application/json"
          ],
          "summary":"Evaluate intrinsic in payload",
          "nickname":"evaluateFunctions",
          "method":"post"
        }
      ],
      "path":"/evaluate/functions",
      "description":null
    }
  ],
  "models":{
    "Node":{
      "properties":{
        "operations":{
          "type":"null"
        },
        "relationships":{
          "type":"null"
        },
        "deploy_number_of_instances":{
          "type":"string"
        },
        "plugins_to_install":{
          "type":"null"
        },
        "type_hierarchy":{
          "type":"null"
        },
        "blueprint_id":{
          "type":"string"
        },
        "number_of_instances":{
          "type":"string"
        },
        "properties":{
          "type":"null"
        },
        "plugins":{
          "type":"null"
        },
        "host_id":{
          "type":"string"
        },
        "deployment_id":{
          "type":"string"
        },
        "type":{
          "type":"string"
        },
        "id":{
          "type":"string"
        }
      },
      "id":"Node",
      "description":null
    },
    "NodeInstance":{
      "properties":{
        "relationships":{
          "type":"null"
        },
        "version":{
          "type":"null"
        },
        "runtime_properties":{
          "type":"null"
        },
        "state":{
          "type":"string"
        },
        "node_id":{
          "type":"string"
        },
        "host_id":{
          "type":"string"
        },
        "deployment_id":{
          "type":"string"
        },
        "id":{
          "type":"string"
        }
      },
      "id":"NodeInstance",
      "description":null
    },
    "Status":{
      "properties":{
        "status":{
          "type":"string"
        },
        "services":{
          "type":"null"
        }
      },
      "id":"Status",
      "description":null
    },
    "Execution":{
      "properties":{
        "status":{
          "type":"string"
        },
        "parameters":{
          "type":"null"
        },
        "blueprint_id":{
          "type":"string"
        },
        "created_at":{
          "type":"string"
        },
        "workflow_id":{
          "type":"string"
        },
        "error":{
          "type":"string"
        },
        "deployment_id":{
          "type":"string"
        },
        "id":{
          "type":"string"
        }
      },
      "id":"Execution",
      "description":null
    },
    "Version":{
      "properties":{
        "date":{
          "type":"string"
        },
        "commit":{
          "type":"string"
        },
        "version":{
          "type":"string"
        },
        "build":{
          "type":"string"
        }
      },
      "id":"Version",
      "description":null
    },
    "EvaluateFunctionsRequest":{
      "properties":{
        "deployment_id":{
          "type":"string"
        },
        "payload":{
          "type":"null"
        },
        "context":{
          "type":"null"
        }
      },
      "id":"EvaluateFunctionsRequest",
      "description":null
    },
    "Workflow":{
      "properties":{
        "created_at":{
          "type":"string"
        },
        "name":{
          "type":"string"
        },
        "parameters":{
          "type":"null"
        }
      },
      "id":"Workflow",
      "description":null
    },
    "DeploymentOutputs":{
      "properties":{
        "outputs":{
          "type":"null"
        },
        "deployment_id":{
          "type":"string"
        }
      },
      "id":"DeploymentOutputs",
      "description":null
    },
    "ProviderContextPostStatus":{
      "properties":{
        "status":{
          "type":"string"
        }
      },
      "id":"ProviderContextPostStatus",
      "description":null
    },
    "DeploymentModificationRequest":{
      "properties":{
        "nodes":{
          "type":"null"
        },
        "stage":{
          "type":"string"
        }
      },
      "id":"DeploymentModificationRequest",
      "description":null
    },
    "ModifyExecutionRequest":{
      "properties":{
        "action":{
          "type":"string"
        }
      },
      "id":"ModifyExecutionRequest",
      "description":null
    },
    "DeploymentModification":{
      "properties":{
        "modified_nodes":{
          "type":"null"
        },
        "deployment_id":{
          "type":"string"
        },
        "node_instances":{
          "type":"null"
        }
      },
      "id":"DeploymentModification",
      "description":null
    },
    "DeploymentRequest":{
      "properties":{
        "blueprint_id":{
          "type":"string"
        }
      },
      "id":"DeploymentRequest",
      "description":null
    },
    "EvaluatedFunctions":{
      "properties":{
        "deployment_id":{
          "type":"string"
        },
        "payload":{
          "type":"null"
        }
      },
      "id":"EvaluatedFunctions",
      "description":null
    },
    "ProviderContext":{
      "properties":{
        "name":{
          "type":"string"
        },
        "context":{
          "type":"null"
        }
      },
      "id":"ProviderContext",
      "description":null
    },
    "PostProviderContextRequest":{
      "properties":{
        "name":{
          "type":"string"
        },
        "context":{
          "type":"null"
        }
      },
      "id":"PostProviderContextRequest",
      "description":null
    },
    "Deployment":{
      "properties":{
        "inputs":{
          "type":"null"
        },
        "blueprint_id":{
          "type":"string"
        },
        "policy_types":{
          "type":"null"
        },
        "outputs":{
          "type":"null"
        },
        "created_at":{
          "type":"string"
        },
        "updated_at":{
          "type":"string"
        },
        "id":{
          "type":"string"
        },
        "groups":{
          "type":"null"
        },
        "workflows":{
          "items":{
            "$ref":"Workflow"
          },
          "type":"array"
        },
        "policy_triggers":{
          "type":"null"
        }
      },
      "id":"Deployment",
      "description":null
    },
    "ExecutionRequest":{
      "properties":{
        "allow_custom_parameters":{
          "type":"boolean"
        },
        "workflow_id":{
          "type":"string"
        },
        "force":{
          "type":"boolean"
        },
        "parameters":{
          "type":"null"
        }
      },
      "id":"ExecutionRequest",
      "description":null
    },
    "BlueprintState":{
      "properties":{
        "plan":{
          "type":"null"
        },
        "created_at":{
          "type":"string"
        },
        "updated_at":{
          "type":"string"
        },
        "id":{
          "type":"string"
        }
      },
      "id":"BlueprintState",
      "description":null
    },
    "BlueprintValidationStatus":{
      "properties":{
        "status":{
          "type":"string"
        },
        "blueprintId":{
          "type":"string"
        }
      },
      "id":"BlueprintValidationStatus",
      "description":null
    }
  },
  "basePath":"http://localhost:8100",
  "produces":[
    "application/json"
  ],
  "resourcePath":"/",
  "apiVersion":"0.1"
}
