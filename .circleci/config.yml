version: 2
jobs:
    # The build job for staging branches that excludes Google Tag Manager
    build-staging:
        docker:
            - image: jmminy/alpine-hugo-git-bash:latest
        working_directory: ~/project
        steps:
            # Checkout the code from the branch into the working_directory
            - checkout
            # Set GitHub branch name in config.toml for the Improve this Page link
            - run:
                name: Replace "branch" with branch name in config.toml 
                command: sed -i s/branch/${CIRCLE_BRANCH}/g config.toml
            # Declare target location for baseURL and deployment location and build site
            # Improvement-> move the declaration to command and save to bash environment: echo 'export PATH=/path/to/foo/bin:$PATH' >> $BASH_ENV
            - run:
                name: Build staging site
                command: |
                    if [ "${CIRCLE_BRANCH}" == "master" ] ;
                        then export LOCATION=staging/dev
                    else
                        export LOCATION=staging/${CIRCLE_BRANCH} ;
                    fi
                    echo ${LOCATION}
                    hugo -v --baseURL http://docs.cloudify.co/$LOCATION
            - persist_to_workspace:
                root: .
                paths:
                    - public

    # The build job for production branches that includes Google Tag Manager
    build-prod:
        docker:
            - image: jmminy/alpine-hugo-git-bash:latest
        working_directory: ~/project
        steps:
            # Checkout the code from the branch into the working_directory
            - checkout
            # Log the current branch
            - run:
                name: Show current branch
                command: echo ${CIRCLE_BRANCH}
            - run:
                name: Building site
                command: |
                    export VERSION=${CIRCLE_BRANCH/-build/}
                    HUGO_ENV=production hugo -v --baseURL http://docs.cloudify.co/$VERSION
            - persist_to_workspace:
                root: .
                paths:
                    - public

    # Deploy for branches other than -build to /staging/{branch}
    deploy-staging:
        docker:
            - image: xueshanf/awscli:latest
        working_directory: ~/project
        steps:
            - attach_workspace:
                at: ~/project
            # Set the signature version for the S3 auth
            - run:
                name: Setting Signature Version 4 for S3 Request Authentication
                command: aws configure set default.s3.signature_version s3v4
            # Declare target location for baseURL and deployment location and deploy to the S3 bucket corresponding to the current branch
            - run:
                name: Deploy to S3
                command: |
                    if [ "${CIRCLE_BRANCH}" == "master" ] ;
                        then export LOCATION=staging/dev
                    else
                        export LOCATION=staging/${CIRCLE_BRANCH} ;
                    fi
                    aws s3 sync public s3://docs.getcloudify.org/$LOCATION --delete --acl public-read

    # Deploy for -build to push to /{version} without -build
    deploy-prod:
        docker:
            - image: xueshanf/awscli:latest
        working_directory: ~/project
        steps:
            - attach_workspace:
                at: ~/project
            # Set the signature version for the S3 auth
            - run:
                name: Setting Signature Version 4 for S3 Request Authentication
                command: aws configure set default.s3.signature_version s3v4
            # Deploy to the S3 bucket corresponding to the current branch
            - run:
                name: Deploy to S3
                command:  |
                    export VERSION=${CIRCLE_BRANCH/-build/}
                    aws s3 sync public s3://docs.getcloudify.org/$VERSION --delete --acl public-read

workflows:
  version: 2
  build-deploy:
    jobs:
      - build-staging:
          filters:
            branches:
              ignore: /.*-build/
      - build-prod:
          filters:
            branches:
              only: /.*-build/
      - deploy-staging:
          requires:
            - build-staging
          filters:
            branches:
              ignore: /.*-build/
      - deploy-prod:
          requires:
            - build-prod
          filters:
            branches:
              only:
                - /.*-build/
